#!/usr/bin/env bash

set -eux

ROOTDIR="$(pwd)"
export CC=clang
export CXX=clang++

MY_INSTALL_DIR="$ROOTDIR/out/$LLVM_RELEASE_BASENAME"
mkdir -p $MY_INSTALL_DIR

mkdir -p "$ROOTDIR/out/build-zlib-host"
cd "$ROOTDIR/out/build-zlib-host"
cmake "$ROOTDIR/zlib" \
    -G Ninja \
    -DCMAKE_INSTALL_PREFIX="$MY_INSTALL_DIR" \
    -DCMAKE_PREFIX_PATH="$MY_INSTALL_DIR" \
    -DCMAKE_BUILD_TYPE=Release
cmake --build . --target install

mkdir -p "$ROOTDIR/out/build-zstd-host"
cd "$ROOTDIR/out/build-zstd-host"
cmake "$ROOTDIR/zstd" \
    -G Ninja \
    -DCMAKE_INSTALL_PREFIX="$MY_INSTALL_DIR" \
    -DCMAKE_PREFIX_PATH="$MY_INSTALL_DIR" \
    -DCMAKE_BUILD_TYPE=Release
cmake --build . --target install

mkdir -p "$ROOTDIR/out/build-llvm-host"
cd "$ROOTDIR/out/build-llvm-host"
cmake "$ROOTDIR/llvm" \
    -G Ninja \
    -DCMAKE_INSTALL_PREFIX="$MY_INSTALL_DIR" \
    -DCMAKE_PREFIX_PATH="$MY_INSTALL_DIR" \
    -DCMAKE_BUILD_TYPE="$CMAKE_BUILD_TYPE" \
    -DLLVM_PARALLEL_LINK_JOBS=1 \
    -DLLVM_ENABLE_BINDINGS=OFF \
    -DLLVM_ENABLE_LIBEDIT=OFF \
    -DLLVM_ENABLE_LIBPFM=OFF \
    -DLLVM_ENABLE_LIBXML2=OFF \
    -DLLVM_ENABLE_OCAMLDOC=OFF \
    -DLLVM_ENABLE_PLUGINS=OFF \
    -DLLVM_ENABLE_PROJECTS="lld;clang" \
    -DLLVM_ENABLE_TERMINFO=OFF \
    -DLLVM_ENABLE_Z3_SOLVER=OFF \
    -DLLVM_ENABLE_ZSTD=OFF \
    -DLLVM_INCLUDE_UTILS=OFF \
    -DLLVM_INCLUDE_TESTS=OFF \
    -DLLVM_INCLUDE_EXAMPLES=OFF \
    -DLLVM_INCLUDE_BENCHMARKS=OFF \
    -DLLVM_INCLUDE_DOCS=OFF \
    -DLLVM_TOOL_LLVM_LTO2_BUILD=OFF \
    -DLLVM_TOOL_LLVM_LTO_BUILD=OFF \
    -DLLVM_TOOL_LTO_BUILD=OFF \
    -DLLVM_TOOL_REMARKS_SHLIB_BUILD=OFF \
    -DCLANG_INCLUDE_DOCS=OFF \
    -DCLANG_INCLUDE_TESTS=OFF \
    -DCLANG_TOOL_CLANG_IMPORT_TEST_BUILD=OFF \
    -DCLANG_TOOL_CLANG_LINKER_WRAPPER_BUILD=OFF \
    -DCLANG_TOOL_C_INDEX_TEST_BUILD=OFF \
    -DCLANG_TOOL_ARCMT_TEST_BUILD=OFF \
    -DCLANG_TOOL_C_ARCMT_TEST_BUILD=OFF \
    -DCLANG_TOOL_LIBCLANG_BUILD=OFF
cmake --build . --target install

cd $ROOTDIR

ls -lasR $MY_INSTALL_DIR

rm $MY_INSTALL_DIR/analyze-build
rm $MY_INSTALL_DIR/bugpoint
rm $MY_INSTALL_DIR/clang-check
rm $MY_INSTALL_DIR/clang-extdef-mapping
rm $MY_INSTALL_DIR/clang-offload-bundler
rm $MY_INSTALL_DIR/clang-offload-packager
rm $MY_INSTALL_DIR/clang-refactor
rm $MY_INSTALL_DIR/clang-rename
rm $MY_INSTALL_DIR/clang-repl
rm $MY_INSTALL_DIR/clang-tblgen
rm $MY_INSTALL_DIR/diagtool
rm $MY_INSTALL_DIR/hmaptool
rm $MY_INSTALL_DIR/intercept-build
rm $MY_INSTALL_DIR/llvm-bcanalyzer
rm $MY_INSTALL_DIR/llvm-bitcode-strip -> llvm-objcopy
rm $MY_INSTALL_DIR/llvm-c-test
rm $MY_INSTALL_DIR/llvm-cat
rm $MY_INSTALL_DIR/llvm-cfi-verify
rm $MY_INSTALL_DIR/llvm-cov
rm $MY_INSTALL_DIR/llvm-cvtres
rm $MY_INSTALL_DIR/llvm-cxxdump
rm $MY_INSTALL_DIR/llvm-cxxfilt
rm $MY_INSTALL_DIR/llvm-cxxmap
rm $MY_INSTALL_DIR/llvm-debuginfod-find
rm $MY_INSTALL_DIR/llvm-diff
rm $MY_INSTALL_DIR/llvm-dis
rm $MY_INSTALL_DIR/llvm-dwarfdump
rm $MY_INSTALL_DIR/llvm-dwarfutil
rm $MY_INSTALL_DIR/llvm-extract
rm $MY_INSTALL_DIR/llvm-ifs
rm $MY_INSTALL_DIR/llvm-install-name-tool -> llvm-objcopy
rm $MY_INSTALL_DIR/llvm-link
rm $MY_INSTALL_DIR/llvm-lipo
rm $MY_INSTALL_DIR/llvm-mc
rm $MY_INSTALL_DIR/llvm-mca
rm $MY_INSTALL_DIR/llvm-ml
rm $MY_INSTALL_DIR/llvm-modextract
rm $MY_INSTALL_DIR/llvm-mt
rm $MY_INSTALL_DIR/llvm-nm
rm $MY_INSTALL_DIR/llvm-objcopy
rm $MY_INSTALL_DIR/llvm-objdump
rm $MY_INSTALL_DIR/llvm-opt-report
rm $MY_INSTALL_DIR/llvm-otool -> llvm-objdump
rm $MY_INSTALL_DIR/llvm-pdbutil
rm $MY_INSTALL_DIR/llvm-profdata
rm $MY_INSTALL_DIR/llvm-profgen
rm $MY_INSTALL_DIR/llvm-readelf -> llvm-readobj
rm $MY_INSTALL_DIR/llvm-readobj
rm $MY_INSTALL_DIR/llvm-rtdyld
rm $MY_INSTALL_DIR/llvm-sim
rm $MY_INSTALL_DIR/llvm-size
rm $MY_INSTALL_DIR/llvm-split
rm $MY_INSTALL_DIR/llvm-stress
rm $MY_INSTALL_DIR/llvm-strings
rm $MY_INSTALL_DIR/llvm-strip -> llvm-objcopy
rm $MY_INSTALL_DIR/llvm-symbolizer
rm $MY_INSTALL_DIR/llvm-tblgen
rm $MY_INSTALL_DIR/llvm-tli-checker
rm $MY_INSTALL_DIR/llvm-undname
rm $MY_INSTALL_DIR/llvm-xray
rm $MY_INSTALL_DIR/nvptx-arch
rm $MY_INSTALL_DIR/opt
rm $MY_INSTALL_DIR/sanstats
rm $MY_INSTALL_DIR/scan-build
rm $MY_INSTALL_DIR/scan-build-py
rm $MY_INSTALL_DIR/set-xcode-analyzer
rm $MY_INSTALL_DIR/verify-uselistorder

rm -rf "$ROOTDIR/out/build-zlib-host"
rm -rf "$ROOTDIR/out/build-zstd-host"
rm -rf "$ROOTDIR/out/build-llvm-host"

DEPLOY_FILENAME="$LLVM_RELEASE_BASENAME.7z"
DEPLOY_FILE_PATH="$ROOTDIR/out/$DEPLOY_FILENAME"
7z a -t7z -m0=lzma2 -mx=9 -mfb=64 -md=32m -ms=on $DEPLOY_FILE_PATH $MY_INSTALL_DIR
rm -rf $MY_INSTALL_DIR
cd $ROOTDIR/out
b2sum $DEPLOY_FILENAME > "$DEPLOY_FILENAME.b2sum"
cat "$DEPLOY_FILENAME.b2sum"
cd $ROOTDIR
split -n 5 -d $DEPLOY_FILE_PATH $DEPLOY_FILE_PATH

echo "DEPLOY_FILE=$DEPLOY_FILE_PATH" >> $GITHUB_OUTPUT
